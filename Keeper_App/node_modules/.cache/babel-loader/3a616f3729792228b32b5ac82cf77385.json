{"ast":null,"code":"import _defineProperty from \"/home/homelaptop/Documents/React/Keeper_App/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/homelaptop/Documents/React/Keeper_App/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/homelaptop/Documents/React/Keeper_App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/homelaptop/Documents/React/Keeper_App/src/components/CreateArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CreateArea(props) {\n  _s();\n\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isExpanded = _useState4[0],\n      setIsExpanded = _useState4[1];\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevValue) {\n      return _objectSpread(_objectSpread({}, prevValue), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var expand = function expand() {\n    setIsExpanded(true);\n  };\n\n  var handleClick = function handleClick(event) {\n    props.onAdd(note);\n    event.preventDefault();\n    return setNote({\n      title: \"\",\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, isExpanded && /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onClick: expand,\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })))));\n}\n\n_s(CreateArea, \"4i/IEny0GbgGrqUFfpHOSD/BpDk=\");\n\n_c = CreateArea;\nexport default CreateArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"sources":["/home/homelaptop/Documents/React/Keeper_App/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Zoom","CreateArea","props","title","content","note","setNote","isExpanded","setIsExpanded","handleChange","event","target","name","value","prevValue","expand","handleClick","onAdd","preventDefault"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,kBAAuBJ,QAAQ,CAAC;AAC9BK,IAAAA,KAAK,EAAC,EADwB;AAE9BC,IAAAA,OAAO,EAAC;AAFsB,GAAD,CAA/B;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAYC,OAAZ;;AAKA,mBAAqCR,QAAQ,CAAC,KAAD,CAA7C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAoBC,aAApB;;AACA,MAAMC,YAAY,GAAC,SAAbA,YAAa,CAACC,KAAD,EAAS;AAC1B,wBAAqBA,KAAK,CAACC,MAA3B;AAAA,QAAOC,IAAP,iBAAOA,IAAP;AAAA,QAAaC,KAAb,iBAAaA,KAAb;AACAP,IAAAA,OAAO,CAAC,UAACQ,SAAD,EAAa;AACnB,6CAAWA,SAAX,2BACGF,IADH,EACSC,KADT;AAGD,KAJM,CAAP;AAKD,GAPD;;AAQA,MAAME,MAAM,GAAC,SAAPA,MAAO,GAAI;AACfP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,MAAMQ,WAAW,GAAC,SAAZA,WAAY,CAACN,KAAD,EAAS;AAEzBR,IAAAA,KAAK,CAACe,KAAN,CAAYZ,IAAZ;AACAK,IAAAA,KAAK,CAACQ,cAAN;AACA,WAAOZ,OAAO,CAAC;AACbH,MAAAA,KAAK,EAAC,EADO;AAEbC,MAAAA,OAAO,EAAC;AAFK,KAAD,CAAd;AAID,GARD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECG,UAAU,iBAAK;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAGE,YAA/B;AAA6C,IAAA,KAAK,EAAEJ,IAAI,CAACF,KAAzD;AAAgE,IAAA,WAAW,EAAC,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,eAIE;AACA,IAAA,IAAI,EAAC,SADL;AAEA,IAAA,OAAO,EAAGY,MAFV;AAGA,IAAA,QAAQ,EAAGN,YAHX;AAIA,IAAA,KAAK,EAAEJ,IAAI,CAACD,OAJZ;AAKA,IAAA,WAAW,EAAC,gBALZ;AAMA,IAAA,IAAI,EAAC,GANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAeE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,OAAO,EAAIY,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFF,CAfF,CADF,CADF;AA2BD;;GAzDQf,U;;KAAAA,U;AA2DT,eAAeA,UAAf","sourcesContent":["import React , {useState} from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CreateArea(props) {\n  const [note,setNote] = useState({\n    title:\"\" ,\n    content:\"\"\n  })\n\n  const [isExpanded , setIsExpanded] = useState(false)\n  const handleChange=(event)=>{\n    const {name ,value} =event.target;\n    setNote((prevValue)=>{\n      return {...prevValue , \n        [name]:value\n      }\n    })\n  }\n  const expand=()=>{\n    setIsExpanded(true)\n  }\n\n  const handleClick=(event)=>{\n\n    props.onAdd(note)\n    event.preventDefault()\n    return setNote({\n      title:\"\" ,\n      content:\"\"\n    })\n  }\n\n\n  return (\n    <div>\n      <form>\n\n      {isExpanded &&  <input name=\"title\" onChange= {handleChange} value={note.title} placeholder=\"Title\" />}\n       \n        <textarea \n        name=\"content\" \n        onClick ={expand}\n        onChange= {handleChange} \n        value={note.content} \n        placeholder=\"Take a note...\" \n        rows=\"3\" />\n        \n        \n\n\n        <Zoom in ={true} >\n          \n          <button onClick = {handleClick}>\n          <AddIcon />\n          </button>\n\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;"]},"metadata":{},"sourceType":"module"}