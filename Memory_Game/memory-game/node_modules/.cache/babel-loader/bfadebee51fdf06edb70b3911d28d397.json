{"ast":null,"code":"var _jsxFileName = \"/home/homelaptop/Desktop/JS_projects/19-Memory_Game/memory-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { Card } from './components/Card.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [// { \"src\":\"/images/blank.png\"},\n{\n  \"src\": \"/images/cheeseburger.png\"\n}, {\n  \"src\": \"/images/fries.png\"\n}, {\n  \"src\": \"/images/hotdog.png\"\n}, {\n  \"src\": \"/images/ice-cream.png\"\n}, {\n  \"src\": \"/images/milkshake.png\"\n}, {\n  \"src\": \"/images/pizza.png\"\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  function shuffleCards() {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  function handleChoice(card) {\n    console.log(card.src); // choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  function resetTurn() {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  } //compare two cards\n\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      console.log(choiceOne + \" \" + choiceTwo);\n\n      if (choiceOne.src === choiceTwo.src) {\n        console.log('those cards match');\n        resetTurn();\n      } else {\n        console.log('those cards dont match');\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns:\", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        id: card.id,\n        src: card.src,\n        onChecked: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Dau6rNVCE4L8CO+FxeFC6jYy6BM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/homelaptop/Desktop/JS_projects/19-Memory_Game/memory-game/src/App.js"],"names":["React","useEffect","useState","Card","cardImages","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","console","log","src","resetTurn","prevTurns"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport './App.css';\nimport {Card} from './components/Card.jsx';\nconst cardImages=[\n// { \"src\":\"/images/blank.png\"},\n{\"src\":\"/images/cheeseburger.png\"},\n{\"src\":\"/images/fries.png\"},\n{\"src\":\"/images/hotdog.png\"},\n{\"src\":\"/images/ice-cream.png\"},\n{\"src\":\"/images/milkshake.png\"},\n{\"src\":\"/images/pizza.png\"} ];\n\nfunction App() {\n\n  const [cards,setCards]= useState([]);\n  const [turns, setTurns]=useState(0);\n  const [choiceOne,setChoiceOne]=useState(null);\n  const [choiceTwo,setChoiceTwo]=useState(null);\n\n\n  function shuffleCards(){\n    const shuffledCards=[...cardImages,...cardImages]\n    .sort(()=>Math.random()-0.5)\n    .map((card)=>({...card,id:Math.random()}))\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n \n  function handleChoice(card){\n    console.log(card.src);\n    // choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    \n  }\n\n  function resetTurn(){\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns( prevTurns => prevTurns + 1)\n  }\n  //compare two cards\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n      console.log(choiceOne +\" \"+ choiceTwo);\n      if (choiceOne.src === choiceTwo.src) {\n        console.log('those cards match')\n        resetTurn()\n      } else{\n        console.log('those cards dont match')\n        resetTurn()\n      }\n      \n    }\n\n  }, [choiceOne, choiceTwo]);\n\n  return (\n    <div>\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <p>Turns:{turns}</p>\n      <div className=\"card-grid\">\n      {cards.map(card => (\n        <Card key={card.id} \n        id = {card.id}\n        src ={card.src}\n        onChecked={handleChoice} \n        />\n        ))}\n      </div>\n    </div>\n\n   \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}