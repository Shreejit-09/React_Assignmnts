{"ast":null,"code":"var _jsxFileName = \"/home/homelaptop/Documents/React/Memory_Game/memory-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { Card } from './components/Card.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [// { \"src\":\"/images/blank.png\"},\n{\n  \"src\": \"/images/cheeseburger.png\",\n  \"matched\": false\n}, {\n  \"src\": \"/images/fries.png\",\n  \"matched\": false\n}, {\n  \"src\": \"/images/hotdog.png\",\n  \"matched\": false\n}, {\n  \"src\": \"/images/ice-cream.png\",\n  \"matched\": false\n}, {\n  \"src\": \"/images/milkshake.png\",\n  \"matched\": false\n}, {\n  \"src\": \"/images/pizza.png\",\n  \"matched\": false\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  function shuffleCards() {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  function handleChoice(card) {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  function resetTurn() {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  } //compare two cards\n\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      // console.log(choiceOne);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns:\", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        id: card,\n        src: card.src,\n        onChecked: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xGZTxGBy0A+45ojLcXSLIV5CcsY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/homelaptop/Documents/React/Memory_Game/memory-game/src/App.js"],"names":["React","useEffect","useState","Card","cardImages","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","resetTurn","prevTurns","src","prevCards","matched","setTimeout","console","log","index"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport './App.css';\nimport {Card} from './components/Card.jsx';\n\nconst cardImages=[\n// { \"src\":\"/images/blank.png\"},\n{\"src\":\"/images/cheeseburger.png\" , \"matched\":false},\n{\"src\":\"/images/fries.png\" , \"matched\":false},\n{\"src\":\"/images/hotdog.png\" , \"matched\":false},\n{\"src\":\"/images/ice-cream.png\" , \"matched\":false},\n{\"src\":\"/images/milkshake.png\" , \"matched\":false},\n{\"src\":\"/images/pizza.png\" , \"matched\":false} ];\n\nfunction App() {\n\n  const [cards,setCards]= useState([]);\n  const [turns, setTurns]=useState(0);\n  const [choiceOne,setChoiceOne]=useState(null);\n  const [choiceTwo,setChoiceTwo]=useState(null);\n  const [disabled,setDisabled]= useState(false);\n\n\n  function shuffleCards(){\n    const shuffledCards=[...cardImages,...cardImages]\n    .sort(()=>Math.random()-0.5)\n    .map((card)=>({...card,id:Math.random()}))\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n \n  function handleChoice(card){\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    \n  }\n\n  function resetTurn(){\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns( prevTurns => prevTurns + 1)\n  }\n  //compare two cards\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n      // console.log(choiceOne);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards =>{\n\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src){\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else{\n        \n       setTimeout(()=> resetTurn() ,1000);\n      }\n      \n    }\n\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  return (\n    <div>\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <p>Turns:{turns}</p>\n      <div className=\"card-grid\">\n      {cards.map((card,index) => (\n        <Card key={index} \n        id = {card}\n        src ={card.src}\n        onChecked={handleChoice} \n        flipped = {card === choiceOne || card === choiceTwo || card.matched}\n        \n        />\n        ))}\n      </div>\n    </div>\n\n   \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}